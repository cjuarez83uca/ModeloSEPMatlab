Model {
  Name			  "parte2_eje1_GeneradorSincrono"
  Version		  8.1
  GraphicalInterface {
    NumRootInports	    0
    NumRootOutports	    11
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "efd"
    }
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "i1d"
    }
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "i1q"
    }
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "i2q"
    }
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "Wd"
    }
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "Wq"
    }
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "W0"
    }
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "Wfd"
    }
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "W1d"
    }
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "W1q"
    }
    Outport {
      BusObject		      ""
      BusOutputAsStruct	      "off"
      Name		      "W2q"
    }
    ParameterArgumentNames  ""
    ComputedModelVersion    "1.10"
    NumModelReferences	    0
    NumTestPointedSignals   0
  }
  SavedCharacterEncoding  "windows-1252"
  ScopeRefreshTime	  0.035000
  OverrideScopeRefreshTime on
  DisableAllScopes	  off
  DataTypeOverride	  "UseLocalSettings"
  DataTypeOverrideAppliesTo "AllNumericTypes"
  MinMaxOverflowLogging	  "UseLocalSettings"
  MinMaxOverflowArchiveMode "Overwrite"
  FPTRunName		  "Run 1"
  MaxMDLFileLineLength	  120
  Object {
    $PropName		    "BdWindowsInfo"
    $ObjectID		    1
    $ClassName		    "Simulink.BDWindowsInfo"
    Object {
      $PropName		      "WindowsInfo"
      $ObjectID		      2
      $ClassName	      "Simulink.WindowInfo"
      IsActive		      [1]
      Location		      [-8.0, -8.0, 1936.0, 1168.0]
      Object {
	$PropName		"ModelBrowserInfo"
	$ObjectID		3
	$ClassName		"Simulink.ModelBrowserInfo"
	Visible			[0]
	DockPosition		"Left"
	Width			[50]
	Height			[50]
	Filter			[9]
      }
      Object {
	$PropName		"ExplorerBarInfo"
	$ObjectID		4
	$ClassName		"Simulink.ExplorerBarInfo"
	Visible			[1]
      }
      Object {
	$PropName		"EditorsInfo"
	$ObjectID		5
	$ClassName		"Simulink.EditorInfo"
	IsActive		[1]
	ViewObjType		"SimulinkTopLevel"
	LoadSaveID		"0"
	Extents			[1882.0, 926.0]
	ZoomFactor		[1.5]
	Offset			[-619.60769923278315, 739.91819120207356]
      }
    }
  }
  Created		  "Thu Nov 22 08:23:42 2018"
  Creator		  "cjuar"
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedByFormat	  "%<Auto>"
  LastModifiedBy	  "cjuar"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Thu Feb 02 15:34:13 2023"
  RTWModifiedTimeStamp	  597252852
  ModelVersionFormat	  "1.%<AutoIncrement:10>"
  SampleTimeColors	  off
  SampleTimeAnnotations	  off
  LibraryLinkDisplay	  "disabled"
  WideLines		  off
  ShowLineDimensions	  off
  ShowPortDataTypes	  off
  ShowDesignRanges	  off
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  ShowStorageClass	  off
  ShowTestPointIcons	  on
  ShowSignalResolutionIcons on
  ShowViewerIcons	  on
  SortedOrder		  off
  ExecutionContextIcon	  off
  ShowLinearizationAnnotations on
  BlockNameDataTip	  off
  BlockParametersDataTip  off
  BlockDescriptionStringDataTip	off
  ToolBar		  on
  StatusBar		  on
  BrowserShowLibraryLinks off
  BrowserLookUnderMasks	  off
  SimulationMode	  "normal"
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  AccelSystemTargetFile	  "accel.tlc"
  AccelTemplateMakefile	  "accel_default_tmf"
  AccelMakeCommand	  "make_rtw"
  TryForcingSFcnDF	  off
  Object {
    $PropName		    "DataLoggingOverride"
    $ObjectID		    7
    $ClassName		    "Simulink.SimulationData.ModelLoggingInfo"
    model_		    "parte2_eje1_GeneradorSincrono"
    overrideMode_	    [0.0]
    Array {
      Type		      "Cell"
      Dimension		      1
      Cell		      "parte2_eje1_GeneradorSincrono"
      PropName		      "logAsSpecifiedByModels_"
    }
    Array {
      Type		      "Cell"
      Dimension		      1
      Cell		      []
      PropName		      "logAsSpecifiedByModelsSSIDs_"
    }
  }
  RecordCoverage	  off
  CovPath		  "/"
  CovSaveName		  "covdata"
  CovMetricSettings	  "dwe"
  CovNameIncrementing	  off
  CovHtmlReporting	  off
  CovForceBlockReductionOff on
  covSaveCumulativeToWorkspaceVar off
  CovSaveSingleToWorkspaceVar off
  CovCumulativeVarName	  "covCumulativeData"
  CovCumulativeReport	  off
  CovReportOnPause	  on
  CovModelRefEnable	  "Off"
  CovExternalEMLEnable	  on
  ExtModeBatchMode	  off
  ExtModeEnableFloating	  on
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigDurationFloating "auto"
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock on
  ShowModelReferenceBlockVersion off
  ShowModelReferenceBlockIO off
  Array {
    Type		    "Handle"
    Dimension		    1
    Simulink.ConfigSet {
      $ObjectID		      8
      Version		      "1.13.0"
      Array {
	Type			"Handle"
	Dimension		9
	Simulink.SolverCC {
	  $ObjectID		  9
	  Version		  "1.13.0"
	  Components		  []
	  StartTime		  "0.0"
	  StopTime		  "0.05"
	  AbsTol		  "auto"
	  FixedStep		  "auto"
	  InitialStep		  "auto"
	  MaxOrder		  5
	  ZcThreshold		  "auto"
	  ConsecutiveZCsStepRelTol "10*128*eps"
	  MaxConsecutiveZCs	  "1000"
	  ExtrapolationOrder	  4
	  NumberNewtonIterations  1
	  MaxStep		  "auto"
	  MinStep		  "auto"
	  MaxConsecutiveMinStep	  "1"
	  RelTol		  "1e-3"
	  SolverMode		  "SingleTasking"
	  EnableConcurrentExecution off
	  ConcurrentTasks	  off
	  Solver		  ode45
	  SolverName		  ode45
	  SolverJacobianMethodControl "auto"
	  ShapePreserveControl	  "DisableAll"
	  ZeroCrossControl	  "UseLocalSettings"
	  ZeroCrossAlgorithm	  "Nonadaptive"
	  AlgebraicLoopSolver	  "TrustRegion"
	  SolverResetMethod	  "Fast"
	  PositivePriorityOrder	  off
	  AutoInsertRateTranBlk	  off
	  SampleTimeConstraint	  "Unconstrained"
	  InsertRTBMode		  "Whenever possible"
	}
	Simulink.DataIOCC {
	  $ObjectID		  10
	  Version		  "1.13.0"
	  Components		  []
	  Decimation		  "1"
	  ExternalInput		  "[t, u]"
	  FinalStateName	  "xFinal"
	  InitialState		  "xInitial"
	  LimitDataPoints	  off
	  MaxDataPoints		  "1000"
	  LoadExternalInput	  off
	  LoadInitialState	  off
	  SaveFinalState	  off
	  SaveCompleteFinalSimState off
	  SaveFormat		  "StructureWithTime"
	  SignalLoggingSaveFormat "Dataset"
	  SaveOutput		  on
	  SaveState		  off
	  SignalLogging		  on
	  DSMLogging		  on
	  InspectSignalLogs	  off
	  SaveTime		  on
	  ReturnWorkspaceOutputs  off
	  StateSaveName		  "xout"
	  TimeSaveName		  "tout"
	  OutputSaveName	  "yout"
	  SignalLoggingName	  "logsout"
	  DSMLoggingName	  "dsmout"
	  OutputOption		  "RefineOutputTimes"
	  OutputTimes		  "[]"
	  ReturnWorkspaceOutputsName "out"
	  Refine		  "1"
	}
	Simulink.OptimizationCC {
	  $ObjectID		  11
	  Version		  "1.13.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    9
	    Cell		    "BooleansAsBitfields"
	    Cell		    "PassReuseOutputArgsAs"
	    Cell		    "PassReuseOutputArgsThreshold"
	    Cell		    "ZeroExternalMemoryAtStartup"
	    Cell		    "ZeroInternalMemoryAtStartup"
	    Cell		    "OptimizeModelRefInitCode"
	    Cell		    "NoFixptDivByZeroProtection"
	    Cell		    "UseSpecifiedMinMax"
	    Cell		    "EfficientTunableParamExpr"
	    PropName		    "DisabledProps"
	  }
	  Components		  []
	  BlockReduction	  on
	  BooleanDataType	  on
	  ConditionallyExecuteInputs on
	  InlineParams		  off
	  UseIntDivNetSlope	  off
	  UseFloatMulNetSlope	  off
	  UseSpecifiedMinMax	  off
	  InlineInvariantSignals  off
	  OptimizeBlockIOStorage  on
	  BufferReuse		  on
	  EnhancedBackFolding	  off
	  StrengthReduction	  off
	  ExpressionFolding	  on
	  BooleansAsBitfields	  off
	  BitfieldContainerType	  "uint_T"
	  EnableMemcpy		  on
	  MemcpyThreshold	  64
	  PassReuseOutputArgsAs	  "Structure reference"
	  ExpressionDepthLimit	  128
	  LocalBlockOutputs	  on
	  RollThreshold		  5
	  StateBitsets		  off
	  DataBitsets		  off
	  ZeroExternalMemoryAtStartup on
	  ZeroInternalMemoryAtStartup on
	  InitFltsAndDblsToZero	  off
	  NoFixptDivByZeroProtection off
	  EfficientFloat2IntCast  off
	  EfficientMapNaN2IntZero on
	  OptimizeModelRefInitCode off
	  LifeSpan		  "inf"
	  MaxStackSize		  "Inherit from target"
	  BufferReusableBoundary  on
	  SimCompilerOptimization "Off"
	  AccelVerboseBuild	  off
	}
	Simulink.DebuggingCC {
	  $ObjectID		  12
	  Version		  "1.13.0"
	  Components		  []
	  RTPrefix		  "error"
	  ConsistencyChecking	  "none"
	  ArrayBoundsChecking	  "none"
	  SignalInfNanChecking	  "none"
	  SignalRangeChecking	  "none"
	  ReadBeforeWriteMsg	  "UseLocalSettings"
	  WriteAfterWriteMsg	  "UseLocalSettings"
	  WriteAfterReadMsg	  "UseLocalSettings"
	  AlgebraicLoopMsg	  "warning"
	  ArtificialAlgebraicLoopMsg "warning"
	  SaveWithDisabledLinksMsg "warning"
	  SaveWithParameterizedLinksMsg	"warning"
	  CheckSSInitialOutputMsg on
	  UnderspecifiedInitializationDetection	"Simplified"
	  MergeDetectMultiDrivingBlocksExec "error"
	  CheckExecutionContextPreStartOutputMsg off
	  CheckExecutionContextRuntimeOutputMsg	off
	  SignalResolutionControl "UseLocalSettings"
	  BlockPriorityViolationMsg "warning"
	  MinStepSizeMsg	  "warning"
	  TimeAdjustmentMsg	  "none"
	  MaxConsecutiveZCsMsg	  "error"
	  MaskedZcDiagnostic	  "warning"
	  IgnoredZcDiagnostic	  "warning"
	  SolverPrmCheckMsg	  "none"
	  InheritedTsInSrcMsg	  "warning"
	  MultiTaskDSMMsg	  "error"
	  MultiTaskCondExecSysMsg "error"
	  MultiTaskRateTransMsg	  "error"
	  SingleTaskRateTransMsg  "none"
	  TasksWithSamePriorityMsg "warning"
	  SigSpecEnsureSampleTimeMsg "warning"
	  CheckMatrixSingularityMsg "none"
	  IntegerOverflowMsg	  "warning"
	  Int32ToFloatConvMsg	  "warning"
	  ParameterDowncastMsg	  "error"
	  ParameterOverflowMsg	  "error"
	  ParameterUnderflowMsg	  "none"
	  ParameterPrecisionLossMsg "warning"
	  ParameterTunabilityLossMsg "warning"
	  FixptConstUnderflowMsg  "none"
	  FixptConstOverflowMsg	  "none"
	  FixptConstPrecisionLossMsg "none"
	  UnderSpecifiedDataTypeMsg "none"
	  UnnecessaryDatatypeConvMsg "none"
	  VectorMatrixConversionMsg "none"
	  InvalidFcnCallConnMsg	  "error"
	  FcnCallInpInsideContextMsg "EnableAllAsError"
	  SignalLabelMismatchMsg  "none"
	  UnconnectedInputMsg	  "warning"
	  UnconnectedOutputMsg	  "warning"
	  UnconnectedLineMsg	  "warning"
	  SFcnCompatibilityMsg	  "none"
	  FrameProcessingCompatibilityMsg "error"
	  UniqueDataStoreMsg	  "none"
	  BusObjectLabelMismatch  "warning"
	  RootOutportRequireBusObject "warning"
	  AssertControl		  "UseLocalSettings"
	  ModelReferenceIOMsg	  "none"
	  ModelReferenceMultiInstanceNormalModeStructChecksumCheck "error"
	  ModelReferenceVersionMismatchMessage "none"
	  ModelReferenceIOMismatchMessage "none"
	  UnknownTsInhSupMsg	  "warning"
	  ModelReferenceDataLoggingMessage "warning"
	  ModelReferenceSymbolNameMessage "warning"
	  ModelReferenceExtraNoncontSigs "error"
	  StateNameClashWarn	  "none"
	  SimStateInterfaceChecksumMismatchMsg "warning"
	  SimStateOlderReleaseMsg "error"
	  InitInArrayFormatMsg	  "warning"
	  StrictBusMsg		  "ErrorLevel1"
	  BusNameAdapt		  "WarnAndRepair"
	  NonBusSignalsTreatedAsBus "none"
	  BlockIODiagnostic	  "none"
	  SFUnusedDataAndEventsDiag "warning"
	  SFUnexpectedBacktrackingDiag "error"
	  SFInvalidInputDataAccessInChartInitDiag "warning"
	  SFNoUnconditionalDefaultTransitionDiag "error"
	  SFTransitionOutsideNaturalParentDiag "warning"
	  SFUnconditionalTransitionShadowingDiag "warning"
	  SFUndirectedBroadcastEventsDiag "warning"
	  SFTransitionActionBeforeConditionDiag	"warning"
	  ModelReferenceCSMismatchMessage "none"
	}
	Simulink.HardwareCC {
	  $ObjectID		  13
	  Version		  "1.13.0"
	  Components		  []
	  ProdBitPerChar	  8
	  ProdBitPerShort	  16
	  ProdBitPerInt		  32
	  ProdBitPerLong	  32
	  ProdBitPerLongLong	  64
	  ProdBitPerFloat	  32
	  ProdBitPerDouble	  64
	  ProdBitPerPointer	  64
	  ProdLargestAtomicInteger "Char"
	  ProdLargestAtomicFloat  "Float"
	  ProdIntDivRoundTo	  "Zero"
	  ProdEndianess		  "LittleEndian"
	  ProdWordSize		  32
	  ProdShiftRightIntArith  on
	  ProdLongLongMode	  off
	  ProdHWDeviceType	  "Specified"
	  TargetBitPerChar	  8
	  TargetBitPerShort	  16
	  TargetBitPerInt	  32
	  TargetBitPerLong	  32
	  TargetBitPerLongLong	  64
	  TargetBitPerFloat	  32
	  TargetBitPerDouble	  64
	  TargetBitPerPointer	  32
	  TargetLargestAtomicInteger "Char"
	  TargetLargestAtomicFloat "None"
	  TargetShiftRightIntArith on
	  TargetLongLongMode	  off
	  TargetIntDivRoundTo	  "Undefined"
	  TargetEndianess	  "Unspecified"
	  TargetWordSize	  32
	  TargetPreprocMaxBitsSint 32
	  TargetPreprocMaxBitsUint 32
	  TargetHWDeviceType	  "Specified"
	  TargetUnknown		  off
	  ProdEqTarget		  on
	}
	Simulink.ModelReferenceCC {
	  $ObjectID		  14
	  Version		  "1.13.0"
	  Components		  []
	  UpdateModelReferenceTargets "IfOutOfDateOrStructuralChange"
	  CheckModelReferenceTargetMessage "error"
	  EnableParallelModelReferenceBuilds off
	  ParallelModelReferenceErrorOnInvalidPool on
	  ParallelModelReferenceMATLABWorkerInit "None"
	  ModelReferenceNumInstancesAllowed "Multi"
	  PropagateVarSize	  "Infer from blocks in model"
	  ModelReferencePassRootInputsByReference on
	  ModelReferenceMinAlgLoopOccurrences off
	  PropagateSignalLabelsOutOfModel on
	  SupportModelReferenceSimTargetCustomCode off
	}
	Simulink.SFSimCC {
	  $ObjectID		  15
	  Version		  "1.13.0"
	  Components		  []
	  SFSimEcho		  on
	  SimCtrlC		  on
	  SimIntegrity		  on
	  SimUseLocalCustomCode	  off
	  SimParseCustomCode	  on
	  SimBuildMode		  "sf_incremental_build"
	}
	Simulink.RTWCC {
	  $BackupClass		  "Simulink.RTWCC"
	  $ObjectID		  16
	  Version		  "1.13.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    16
	    Cell		    "IncludeHyperlinkInReport"
	    Cell		    "GenerateTraceInfo"
	    Cell		    "GenerateTraceReport"
	    Cell		    "GenerateTraceReportSl"
	    Cell		    "GenerateTraceReportSf"
	    Cell		    "GenerateTraceReportEml"
	    Cell		    "PortableWordSizes"
	    Cell		    "GenerateWebview"
	    Cell		    "GenerateCodeMetricsReport"
	    Cell		    "GenerateCodeReplacementReport"
	    Cell		    "GenerateMissedCodeReplacementReport"
	    Cell		    "GenerateErtSFunction"
	    Cell		    "CreateSILPILBlock"
	    Cell		    "CodeExecutionProfiling"
	    Cell		    "CodeProfilingSaveOptions"
	    Cell		    "CodeProfilingInstrumentation"
	    PropName		    "DisabledProps"
	  }
	  SystemTargetFile	  "grt.tlc"
	  TLCOptions		  ""
	  GenCodeOnly		  off
	  MakeCommand		  "make_rtw"
	  GenerateMakefile	  on
	  PackageGeneratedCodeAndArtifacts off
	  TemplateMakefile	  "grt_default_tmf"
	  PostCodeGenCommand	  ""
	  GenerateReport	  off
	  RTWVerbose		  on
	  RetainRTWFile		  off
	  ProfileTLC		  off
	  TLCDebug		  off
	  TLCCoverage		  off
	  TLCAssert		  off
	  RTWUseLocalCustomCode	  off
	  RTWUseSimCustomCode	  off
	  IncludeHyperlinkInReport off
	  LaunchReport		  off
	  PortableWordSizes	  off
	  GenerateErtSFunction	  off
	  CreateSILPILBlock	  "None"
	  CodeExecutionProfiling  off
	  CodeExecutionProfileVariable "executionProfile"
	  CodeProfilingSaveOptions "SummaryOnly"
	  CodeProfilingInstrumentation off
	  SILDebugging		  off
	  TargetLang		  "C"
	  IncludeBusHierarchyInRTWFileBlockHierarchyMap	off
	  GenerateTraceInfo	  off
	  GenerateTraceReport	  off
	  GenerateTraceReportSl	  off
	  GenerateTraceReportSf	  off
	  GenerateTraceReportEml  off
	  GenerateWebview	  off
	  GenerateCodeMetricsReport off
	  GenerateCodeReplacementReport	off
	  RTWCompilerOptimization "Off"
	  RTWCustomCompilerOptimizations ""
	  CheckMdlBeforeBuild	  "Off"
	  Array {
	    Type		    "Handle"
	    Dimension		    2
	    Simulink.CodeAppCC {
	      $ObjectID		      17
	      Version		      "1.13.0"
	      Array {
		Type			"Cell"
		Dimension		28
		Cell			"IgnoreCustomStorageClasses"
		Cell			"IgnoreTestpoints"
		Cell			"InsertBlockDesc"
		Cell			"InsertPolySpaceComments"
		Cell			"SFDataObjDesc"
		Cell			"MATLABFcnDesc"
		Cell			"SimulinkDataObjDesc"
		Cell			"DefineNamingRule"
		Cell			"SignalNamingRule"
		Cell			"ParamNamingRule"
		Cell			"InternalIdentifier"
		Cell			"InlinedPrmAccess"
		Cell			"CustomSymbolStr"
		Cell			"CustomSymbolStrGlobalVar"
		Cell			"CustomSymbolStrType"
		Cell			"CustomSymbolStrField"
		Cell			"CustomSymbolStrFcn"
		Cell			"CustomSymbolStrModelFcn"
		Cell			"CustomSymbolStrFcnArg"
		Cell			"CustomSymbolStrBlkIO"
		Cell			"CustomSymbolStrTmpVar"
		Cell			"CustomSymbolStrMacro"
		Cell			"CustomSymbolStrUtil"
		Cell			"CustomSymbolStrEmxType"
		Cell			"CustomSymbolStrEmxFcn"
		Cell			"CustomUserTokenString"
		Cell			"ReqsInCode"
		Cell			"BlockCommentType"
		PropName		"DisabledProps"
	      }
	      Components	      []
	      ForceParamTrailComments off
	      GenerateComments	      on
	      IgnoreCustomStorageClasses on
	      IgnoreTestpoints	      off
	      MaxIdLength	      31
	      PreserveName	      off
	      PreserveNameWithParent  off
	      ShowEliminatedStatement off
	      OperatorAnnotations     off
	      SimulinkDataObjDesc     off
	      SFDataObjDesc	      off
	      MATLABFcnDesc	      off
	      MangleLength	      1
	      CustomSymbolStrGlobalVar "$R$N$M"
	      CustomSymbolStrType     "$N$R$M_T"
	      CustomSymbolStrField    "$N$M"
	      CustomSymbolStrFcn      "$R$N$M$F"
	      CustomSymbolStrFcnArg   "rt$I$N$M"
	      CustomSymbolStrBlkIO    "rtb_$N$M"
	      CustomSymbolStrTmpVar   "$N$M"
	      CustomSymbolStrMacro    "$R$N$M"
	      DefineNamingRule	      "None"
	      ParamNamingRule	      "None"
	      SignalNamingRule	      "None"
	      InsertBlockDesc	      off
	      InsertPolySpaceComments off
	      SimulinkBlockComments   on
	      MATLABSourceComments    off
	      EnableCustomComments    off
	      InternalIdentifier      "Shortened"
	      InlinedPrmAccess	      "Literals"
	      ReqsInCode	      off
	      UseSimReservedNames     off
	    }
	    Simulink.GRTTargetCC {
	      $BackupClass	      "Simulink.TargetCC"
	      $ObjectID		      18
	      Version		      "1.13.0"
	      Array {
		Type			"Cell"
		Dimension		17
		Cell			"IncludeMdlTerminateFcn"
		Cell			"SuppressErrorStatus"
		Cell			"ERTCustomFileBanners"
		Cell			"GenerateSampleERTMain"
		Cell			"ExistingSharedCode"
		Cell			"GenerateTestInterfaces"
		Cell			"ModelStepFunctionPrototypeControlCompliant"
		Cell			"GenerateAllocFcn"
		Cell			"PurelyIntegerCode"
		Cell			"SupportComplex"
		Cell			"SupportAbsoluteTime"
		Cell			"SupportContinuousTime"
		Cell			"SupportNonInlinedSFcns"
		Cell			"RemoveDisableFunc"
		Cell			"RemoveResetFunc"
		Cell			"PreserveStateflowLocalDataDimensions"
		Cell			"CombineOutputUpdateFcns"
		PropName		"DisabledProps"
	      }
	      Components	      []
	      TargetFcnLib	      "ansi_tfl_table_tmw.mat"
	      TargetLibSuffix	      ""
	      TargetPreCompLibLocation ""
	      CodeReplacementLibrary  "C99 (ISO)"
	      UtilityFuncGeneration   "Auto"
	      ERTMultiwordTypeDef     "System defined"
	      MultiwordLength	      2048
	      GenerateFullHeader      on
	      GenerateSampleERTMain   off
	      GenerateTestInterfaces  off
	      ModelReferenceCompliant on
	      ParMdlRefBuildCompliant on
	      CompOptLevelCompliant   on
	      ConcurrentExecutionCompliant on
	      IncludeMdlTerminateFcn  on
	      GeneratePreprocessorConditionals "Use local settings"
	      CombineOutputUpdateFcns on
	      CombineSignalStateStructs	off
	      SuppressErrorStatus     off
	      IncludeFileDelimiter    "Auto"
	      ERTCustomFileBanners    off
	      SupportAbsoluteTime     on
	      LogVarNameModifier      "rt_"
	      MatFileLogging	      on
	      MultiInstanceERTCode    off
	      SupportNonFinite	      on
	      SupportComplex	      on
	      PurelyIntegerCode	      off
	      SupportContinuousTime   on
	      SupportNonInlinedSFcns  on
	      SupportVariableSizeSignals off
	      ParenthesesLevel	      "Nominal"
	      MATLABClassNameForMDSCustomization "Simulink.SoftwareTarget.GRTCustomization"
	      ModelStepFunctionPrototypeControlCompliant off
	      CPPClassGenCompliant    off
	      AutosarCompliant	      off
	      GRTInterface	      off
	      GenerateAllocFcn	      off
	      UseMalloc		      off
	      ExtMode		      off
	      ExtModeStaticAlloc      off
	      ExtModeTesting	      off
	      ExtModeStaticAllocSize  1000000
	      ExtModeTransport	      0
	      ExtModeMexFile	      "ext_comm"
	      ExtModeIntrfLevel	      "Level1"
	      RTWCAPISignals	      off
	      RTWCAPIParams	      off
	      RTWCAPIStates	      off
	      RTWCAPIRootIO	      off
	      GenerateASAP2	      off
	    }
	    PropName		    "Components"
	  }
	}
	hdlcoderui.hdlcc {
	  $ObjectID		  20
	  Version		  "1.13.0"
	  Description		  "HDL Coder custom configuration component"
	  Components		  []
	  Name			  "HDL Coder"
	  Array {
	    Type		    "Cell"
	    Dimension		    1
	    Cell		    " "
	    PropName		    "HDLConfigFile"
	  }
	  HDLCActiveTab		  "0"
	}
	PropName		"Components"
      }
      Name		      "Configuration"
      CurrentDlgPage	      "Solver"
      ConfigPrmDlgPosition    [ 180, 192, 1100, 832 ]
    }
    PropName		    "ConfigurationSets"
  }
  Simulink.ConfigSet {
    $PropName		    "ActiveConfigurationSet"
    $ObjectID		    8
  }
  Object {
    $PropName		    "DataTransfer"
    $ObjectID		    21
    $ClassName		    "Simulink.GlobalDataTransfer"
    DefaultTransitionBetweenSyncTasks "Ensure deterministic transfer (maximum delay)"
    DefaultTransitionBetweenAsyncTasks "Ensure data integrity only"
    DefaultTransitionBetweenContTasks "Ensure deterministic transfer (minimum delay)"
    DefaultExtrapolationMethodBetweenContTasks "None"
  }
  ExplicitPartitioning	  off
  BlockDefaults {
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
    BlockRotation	    0
    BlockMirror		    off
  }
  AnnotationDefaults {
    HorizontalAlignment	    "left"
    VerticalAlignment	    "top"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    UseDisplayTextAsClickCallback off
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  MaskDefaults {
    SelfModifiable	    "off"
    IconFrame		    "on"
    IconOpaque		    "on"
    RunInitForIconRedraw    "off"
    IconRotate		    "none"
    PortRotate		    "default"
    IconUnits		    "autoscale"
  }
  MaskParameterDefaults {
    Evaluate		    "on"
    Tunable		    "on"
    NeverSave		    "off"
    Internal		    "off"
    ReadOnly		    "off"
    Enabled		    "on"
    Visible		    "on"
    ToolTip		    "on"
  }
  BlockParameterDefaults {
    Block {
      BlockType		      Clock
      DisplayTime	      off
      Decimation	      "10"
    }
    Block {
      BlockType		      Constant
      Value		      "1"
      VectorParams1D	      on
      SamplingMode	      "Sample based"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Inherit from 'Constant value'"
      LockScale		      off
      SampleTime	      "inf"
      FramePeriod	      "inf"
      PreserveConstantTs      off
    }
    Block {
      BlockType		      Derivative
      CoefficientInTFapproximation "inf"
    }
    Block {
      BlockType		      Display
      Format		      "short"
      Decimation	      "10"
      Floating		      off
      Lockdown		      off
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Gain
      Gain		      "1"
      Multiplication	      "Element-wise(K.*u)"
      ParamMin		      "[]"
      ParamMax		      "[]"
      ParamDataTypeStr	      "Inherit: Same as input"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Same as input"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Mux
      Inputs		      "4"
      DisplayOption	      "none"
      UseBusObject	      off
      BusObject		      "BusObject"
      NonVirtualBus	      off
    }
    Block {
      BlockType		      Outport
      Port		      "1"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: auto"
      LockScale		      off
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      VarSizeSig	      "Inherit"
      SampleTime	      "-1"
      SignalType	      "auto"
      SamplingMode	      "auto"
      SourceOfInitialOutputValue "Dialog"
      OutputWhenDisabled      "held"
      InitialOutput	      "[]"
      OutputWhenUnConnected   off
    }
    Block {
      BlockType		      Product
      Inputs		      "2"
      Multiplication	      "Element-wise(.*)"
      CollapseMode	      "All dimensions"
      CollapseDim	      "1"
      InputSameDT	      on
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Same as first input"
      LockScale		      off
      RndMeth		      "Zero"
      SaturateOnIntegerOverflow	on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Scope
    }
    Block {
      BlockType		      Sum
      IconShape		      "rectangular"
      Inputs		      "++"
      CollapseMode	      "All dimensions"
      CollapseDim	      "1"
      InputSameDT	      on
      AccumDataTypeStr	      "Inherit: Inherit via internal rule"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Same as first input"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Trigonometry
      Operator		      "sin"
      ApproximationMethod     "None"
      NumberOfIterations      "11"
      OutputSignalType	      "auto"
      SampleTime	      "-1"
    }
  }
  System {
    Name		    "parte2_eje1_GeneradorSincrono"
    Location		    [-8, -8, 1928, 1160]
    Open		    off
    ModelBrowserVisibility  off
    ModelBrowserWidth	    200
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "usletter"
    PaperUnits		    "inches"
    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
    TiledPageScale	    1
    ShowPageBoundaries	    off
    ZoomFactor		    "150"
    ReportName		    "simulink-default.rpt"
    SIDHighWatermark	    "161"
    Block {
      BlockType		      Clock
      Name		      "Clock"
      SID		      "143"
      Position		      [1615, 230, 1635, 250]
      ZOrder		      140
    }
    Block {
      BlockType		      Clock
      Name		      "Clock1"
      SID		      "150"
      Position		      [1615, 450, 1635, 470]
      ZOrder		      148
    }
    Block {
      BlockType		      Constant
      Name		      "Constant"
      SID		      "19"
      Position		      [1195, 145, 1230, 175]
      ZOrder		      18
      Value		      "Ra"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant1"
      SID		      "35"
      Position		      [30, 765, 65, 795]
      ZOrder		      33
      Value		      "Rfd"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant10"
      SID		      "86"
      Position		      [505, 1292, 530, 1318]
      ZOrder		      87
      BlockMirror	      on
      Value		      "Lffd"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant11"
      SID		      "87"
      Position		      [495, 1405, 525, 1435]
      ZOrder		      89
      BlockMirror	      on
      Value		      "Lad"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant12"
      SID		      "115"
      Position		      [520, 1635, 550, 1665]
      ZOrder		      111
      BlockMirror	      on
      Value		      "Laq"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant13"
      SID		      "108"
      Position		      [485, 1560, 515, 1590]
      ZOrder		      106
      BlockMirror	      on
      Value		      "L11q"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant14"
      SID		      "109"
      Position		      [440, 1499, 465, 1521]
      ZOrder		      109
      BlockMirror	      on
      Value		      "L11d"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant15"
      SID		      "106"
      Position		      [485, 1342, 510, 1368]
      ZOrder		      102
      BlockMirror	      on
      Value		      "Lf1d"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant16"
      SID		      "118"
      Position		      [95, 1140, 130, 1170]
      ZOrder		      114
      Value		      "R2q"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant17"
      SID		      "136"
      Position		      [1605, 195, 1640, 225]
      ZOrder		      133
      Value		      "2*pi*60"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant18"
      SID		      "146"
      Position		      [1645, 275, 1680, 305]
      ZOrder		      143
      Value		      "th"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant19"
      SID		      "151"
      Position		      [1605, 415, 1640, 445]
      ZOrder		      147
      Value		      "2*pi*60"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant2"
      SID		      "36"
      Position		      [70, 925, 105, 955]
      ZOrder		      34
      Value		      "R1d"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant20"
      SID		      "152"
      Position		      [1585, 497, 1670, 523]
      ZOrder		      151
      Value		      "th-2*pi/3"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant3"
      SID		      "37"
      Position		      [95, 990, 130, 1020]
      ZOrder		      35
      Value		      "R1q"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant4"
      SID		      "123"
      Position		      [530, 1885, 560, 1915]
      ZOrder		      119
      BlockMirror	      on
      Value		      "L22q"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant5"
      SID		      "72"
      Position		      [910, 575, 975, 605]
      ZOrder		      69
      Value		      "Lad+Ll"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant6"
      SID		      "74"
      Position		      [930, 670, 960, 700]
      ZOrder		      71
      Value		      "Lad"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant7"
      SID		      "77"
      Position		      [910, 825, 975, 855]
      ZOrder		      75
      Value		      "Laq+Ll"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant8"
      SID		      "78"
      Position		      [930, 920, 960, 950]
      ZOrder		      77
      Value		      "Laq"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant9"
      SID		      "84"
      Position		      [930, 1110, 960, 1140]
      ZOrder		      81
      Value		      "L0"
    }
    Block {
      BlockType		      Product
      Name		      "Divide1"
      SID		      "64"
      Ports		      [2, 1]
      Position		      [260, 902, 290, 933]
      ZOrder		      62
      Inputs		      "*/"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Divide2"
      SID		      "65"
      Ports		      [2, 1]
      Position		      [260, 967, 290, 998]
      ZOrder		      63
      Inputs		      "*/"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Divide3"
      SID		      "66"
      Ports		      [2, 1]
      Position		      [260, 1032, 290, 1063]
      ZOrder		      64
      Inputs		      "*/"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Scope
      Name		      "Floating\nScope"
      SID		      "131"
      Ports		      []
      Position		      [830, -1, 860, 31]
      ZOrder		      127
      NumInputPorts	      "1"
      Floating		      on
      Open		      off
      TimeRange		      auto
      TickLabels	      OneTimeTick
      ShowLegends	      off
      LimitDataPoints	      off
      MaxDataPoints	      5000
      SaveToWorkspace	      off
      SaveName		      ScopeData1
      YMin		      -10.00000
      YMax		      10.00000
      SampleInput	      off
      SampleTime	      -1
      ZoomMode		      on
      Grid		      on
      DataFormat	      StructureWithTime
      Decimation	      1
      List {
	ListType		AxesTitles
	axes1			"%<SignalLabel>"
      }
      List {
	ListType		ScopeGraphics
	FigureColor		"[0.156862745098039 0.156862745098039 0.156862745098039]"
	AxesColor		"[0 0 0]"
	AxesTickColor		"[0.686274509803922 0.686274509803922 0.686274509803922]"
	LineColors		"[1 1 0;1 0 1;0 1 1;1 0 0;0 1 0;0 0 1]"
	LineStyles		"-|-|-|-|-|-"
	LineWidths		"[0.5 0.5 0.5 0.5 0.5 0.5]"
	MarkerStyles		"none|none|none|none|none|none"
      }
      Location		      [680 390 1240 810]
    }
    Block {
      BlockType		      Gain
      Name		      "Gain"
      SID		      "59"
      Position		      [205, 895, 235, 925]
      ZOrder		      57
      Gain		      "-1"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain1"
      SID		      "60"
      Position		      [205, 960, 235, 990]
      ZOrder		      58
      Gain		      "-1"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain2"
      SID		      "61"
      Position		      [205, 1025, 235, 1055]
      ZOrder		      59
      Gain		      "-1"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Gain
      Name		      "Gain3"
      SID		      "85"
      Position		      [1125, 1070, 1155, 1100]
      ZOrder		      82
      Gain		      "-1"
      ParamDataTypeStr	      "Inherit: Inherit via internal rule"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "L*i0"
      SID		      "83"
      Ports		      [2, 1]
      Position		      [1045, 1074, 1065, 1096]
      ZOrder		      80
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "L*id"
      SID		      "73"
      Ports		      [2, 1]
      Position		      [1045, 559, 1065, 581]
      ZOrder		      70
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "L*iq"
      SID		      "79"
      Ports		      [2, 1]
      Position		      [1045, 809, 1065, 831]
      ZOrder		      76
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "L11d*i1d"
      SID		      "111"
      Ports		      [2, 1]
      Position		      [380, 1494, 400, 1516]
      ZOrder		      107
      BlockMirror	      on
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "L11q*i1q"
      SID		      "110"
      Ports		      [2, 1]
      Position		      [375, 1561, 400, 1579]
      ZOrder		      108
      BlockMirror	      on
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "L22q*i2q1"
      SID		      "121"
      Ports		      [2, 1]
      Position		      [375, 1856, 400, 1874]
      ZOrder		      117
      BlockMirror	      on
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Lad*i1d"
      SID		      "76"
      Ports		      [2, 1]
      Position		      [1045, 744, 1065, 766]
      ZOrder		      73
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Lad*id"
      SID		      "95"
      Ports		      [2, 1]
      Position		      [380, 1389, 400, 1411]
      ZOrder		      91
      BlockMirror	      on
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Lad*ifd"
      SID		      "75"
      Ports		      [2, 1]
      Position		      [1045, 654, 1065, 676]
      ZOrder		      72
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Laq*i1q"
      SID		      "120"
      Ports		      [2, 1]
      Position		      [375, 1781, 400, 1799]
      ZOrder		      116
      BlockMirror	      on
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Laq*i2q"
      SID		      "116"
      Ports		      [2, 1]
      Position		      [375, 1636, 400, 1654]
      ZOrder		      112
      BlockMirror	      on
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Laq*iq"
      SID		      "117"
      Ports		      [2, 1]
      Position		      [375, 1691, 400, 1709]
      ZOrder		      113
      BlockMirror	      on
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Laq1*i1q"
      SID		      "81"
      Ports		      [2, 1]
      Position		      [1045, 904, 1065, 926]
      ZOrder		      78
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Laq1*i2q"
      SID		      "80"
      Ports		      [2, 1]
      Position		      [1045, 994, 1065, 1016]
      ZOrder		      79
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Lf1d*i1d"
      SID		      "98"
      Ports		      [2, 1]
      Position		      [380, 1339, 400, 1361]
      ZOrder		      90
      BlockMirror	      on
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Lf1d*ifd"
      SID		      "112"
      Ports		      [2, 1]
      Position		      [380, 1444, 400, 1466]
      ZOrder		      105
      BlockMirror	      on
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Lffd*ifd"
      SID		      "93"
      Ports		      [2, 1]
      Position		      [380, 1289, 400, 1311]
      ZOrder		      88
      BlockMirror	      on
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Mux
      Name		      "Mux"
      SID		      "160"
      Ports		      [2, 1]
      Position		      [1930, 166, 1935, 204]
      ZOrder		      157
      ShowName		      off
      Inputs		      "2"
      DisplayOption	      "bar"
    }
    Block {
      BlockType		      Product
      Name		      "Ra*i0"
      SID		      "26"
      Ports		      [2, 1]
      Position		      [1365, 419, 1385, 441]
      ZOrder		      25
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Ra*id"
      SID		      "21"
      Ports		      [2, 1]
      Position		      [1355, 119, 1375, 141]
      ZOrder		      20
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Ra*iq\n"
      SID		      "20"
      Ports		      [2, 1]
      Position		      [1360, 279, 1380, 301]
      ZOrder		      19
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Rfd*ifd"
      SID		      "132"
      Ports		      [2, 1]
      Position		      [150, 694, 170, 716]
      ZOrder		      129
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Scope
      Name		      "Scope"
      SID		      "161"
      Ports		      [1]
      Position		      [180, 1234, 210, 1266]
      ZOrder		      158
      NumInputPorts	      "1"
      Floating		      off
      Open		      on
      TimeRange		      auto
      TickLabels	      OneTimeTick
      ShowLegends	      off
      LimitDataPoints	      off
      MaxDataPoints	      5000
      SaveToWorkspace	      off
      SaveName		      ScopeData1
      YMin		      -1.09369
      YMax		      -0.89369
      SampleInput	      off
      SampleTime	      -1
      ZoomMode		      on
      Grid		      on
      DataFormat	      StructureWithTime
      Decimation	      1
      List {
	ListType		AxesTitles
	axes1			"%<SignalLabel>"
      }
      List {
	ListType		ScopeGraphics
	FigureColor		"[0.156862745098039 0.156862745098039 0.156862745098039]"
	AxesColor		"[0 0 0]"
	AxesTickColor		"[0.686274509803922 0.686274509803922 0.686274509803922]"
	LineColors		"[1 1 0;1 0 1;0 1 1;1 0 0;0 1 0;0 0 1]"
	LineStyles		"-|-|-|-|-|-"
	LineWidths		"[0.5 0.5 0.5 0.5 0.5 0.5]"
	MarkerStyles		"none|none|none|none|none|none"
      }
      Location		      [680 390 1240 810]
    }
    Block {
      BlockType		      Sum
      Name		      "Sum"
      SID		      "17"
      Ports		      [3, 1]
      Position		      [1420, 75, 1440, 95]
      ZOrder		      16
      ShowName		      off
      IconShape		      "round"
      Inputs		      "|+--"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum1"
      SID		      "18"
      Ports		      [3, 1]
      Position		      [1455, 230, 1475, 250]
      ZOrder		      17
      ShowName		      off
      IconShape		      "round"
      Inputs		      "|++-"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum10"
      SID		      "138"
      Ports		      [3, 1]
      Position		      [1860, 125, 1880, 145]
      ZOrder		      135
      ShowName		      off
      IconShape		      "round"
      Inputs		      "|+-+"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum11"
      SID		      "145"
      Ports		      [2, 1]
      Position		      [1700, 215, 1720, 235]
      ZOrder		      142
      ShowName		      off
      IconShape		      "round"
      Inputs		      "|++"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum12"
      SID		      "153"
      Ports		      [2, 1]
      Position		      [1700, 435, 1720, 455]
      ZOrder		      150
      ShowName		      off
      IconShape		      "round"
      Inputs		      "|+-"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum13"
      SID		      "159"
      Ports		      [3, 1]
      Position		      [1920, 255, 1950, 285]
      ZOrder		      156
      ShowName		      off
      IconShape		      "round"
      Inputs		      "||+-+"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum2"
      SID		      "28"
      Ports		      [2, 1]
      Position		      [1435, 380, 1455, 400]
      ZOrder		      27
      ShowName		      off
      IconShape		      "round"
      Inputs		      "|+-"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum3"
      SID		      "48"
      Ports		      [2, 1]
      Position		      [210, 810, 230, 830]
      ZOrder		      46
      ShowName		      off
      IconShape		      "round"
      Inputs		      "++|"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum4"
      SID		      "71"
      Ports		      [3, 1]
      Position		      [1130, 630, 1150, 650]
      ZOrder		      68
      ShowName		      off
      IconShape		      "round"
      Inputs		      "-++"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum5"
      SID		      "82"
      Ports		      [3, 1]
      Position		      [1130, 880, 1150, 900]
      ZOrder		      74
      ShowName		      off
      IconShape		      "round"
      Inputs		      "-++"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum6"
      SID		      "99"
      Ports		      [3, 1]
      Position		      [325, 1340, 345, 1360]
      ZOrder		      86
      BlockMirror	      on
      ShowName		      off
      IconShape		      "round"
      Inputs		      "++-"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum7"
      SID		      "113"
      Ports		      [3, 1]
      Position		      [265, 1495, 285, 1515]
      ZOrder		      103
      BlockMirror	      on
      ShowName		      off
      IconShape		      "round"
      Inputs		      "++-"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum8"
      SID		      "114"
      Ports		      [3, 1]
      Position		      [265, 1585, 285, 1605]
      ZOrder		      110
      BlockMirror	      on
      ShowName		      off
      IconShape		      "round"
      Inputs		      "++-"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Sum
      Name		      "Sum9"
      SID		      "119"
      Ports		      [3, 1]
      Position		      [265, 1810, 285, 1830]
      ZOrder		      115
      BlockMirror	      on
      ShowName		      off
      IconShape		      "round"
      Inputs		      "++-"
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Trigonometry
      Name		      "Trigonometric\nFunction"
      SID		      "134"
      Ports		      [1, 1]
      Position		      [1735, 120, 1765, 150]
      ZOrder		      131
      Operator		      "cos"
    }
    Block {
      BlockType		      Trigonometry
      Name		      "Trigonometric\nFunction1"
      SID		      "135"
      Ports		      [1, 1]
      Position		      [1760, 210, 1790, 240]
      ZOrder		      132
    }
    Block {
      BlockType		      Trigonometry
      Name		      "Trigonometric\nFunction2"
      SID		      "155"
      Ports		      [1, 1]
      Position		      [1770, 430, 1800, 460]
      ZOrder		      152
      Operator		      "cos"
    }
    Block {
      BlockType		      Trigonometry
      Name		      "Trigonometric\nFunction3"
      SID		      "156"
      Ports		      [1, 1]
      Position		      [1770, 475, 1800, 505]
      ZOrder		      153
    }
    Block {
      BlockType		      Product
      Name		      "Wd*wr"
      SID		      "15"
      Ports		      [2, 1]
      Position		      [1355, 174, 1380, 196]
      ZOrder		      14
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "Wq*Wr"
      SID		      "16"
      Ports		      [2, 1]
      Position		      [1365, 324, 1385, 346]
      ZOrder		      15
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Scope
      Name		      "e0"
      SID		      "4"
      Ports		      [1]
      Position		      [1485, 434, 1515, 466]
      ZOrder		      3
      NumInputPorts	      "1"
      Floating		      off
      Open		      off
      TimeRange		      auto
      TickLabels	      OneTimeTick
      ShowLegends	      off
      LimitDataPoints	      off
      MaxDataPoints	      5000
      SaveToWorkspace	      off
      SaveName		      ScopeData2
      YMin		      -1.00000
      YMax		      1.00000
      SampleInput	      off
      SampleTime	      -1
      ZoomMode		      on
      Grid		      on
      DataFormat	      StructureWithTime
      Decimation	      1
      List {
	ListType		AxesTitles
	axes1			"%<SignalLabel>"
      }
      List {
	ListType		ScopeGraphics
	FigureColor		"[0.156862745098039 0.156862745098039 0.156862745098039]"
	AxesColor		"[0 0 0]"
	AxesTickColor		"[0.686274509803922 0.686274509803922 0.686274509803922]"
	LineColors		"[1 1 0;1 0 1;0 1 1;1 0 0;0 1 0;0 0 1]"
	LineStyles		"-|-|-|-|-|-"
	LineWidths		"[0.5 0.5 0.5 0.5 0.5 0.5]"
	MarkerStyles		"none|none|none|none|none|none"
      }
      Location		      [1067 553 1627 973]
    }
    Block {
      BlockType		      Scope
      Name		      "ea"
      SID		      "147"
      Ports		      [1]
      Position		      [1990, 119, 2020, 151]
      ZOrder		      144
      NumInputPorts	      "1"
      Floating		      off
      Open		      on
      TimeRange		      auto
      TickLabels	      OneTimeTick
      ShowLegends	      off
      LimitDataPoints	      off
      MaxDataPoints	      5000
      SaveToWorkspace	      off
      SaveName		      ScopeData1
      YMin		      -1.24935
      YMax		      1.24935
      SampleInput	      off
      SampleTime	      -1
      ZoomMode		      on
      Grid		      on
      DataFormat	      StructureWithTime
      Decimation	      1
      List {
	ListType		AxesTitles
	axes1			"%<SignalLabel>"
      }
      List {
	ListType		ScopeGraphics
	FigureColor		"[0.156862745098039 0.156862745098039 0.156862745098039]"
	AxesColor		"[0 0 0]"
	AxesTickColor		"[0.686274509803922 0.686274509803922 0.686274509803922]"
	LineColors		"[1 1 0;1 0 1;0 1 1;1 0 0;0 1 0;0 0 1]"
	LineStyles		"-|-|-|-|-|-"
	LineWidths		"[0.5 0.5 0.5 0.5 0.5 0.5]"
	MarkerStyles		"none|none|none|none|none|none"
      }
      Location		      [683 312 1243 732]
    }
    Block {
      BlockType		      Display
      Name		      "ed"
      SID		      "149"
      Ports		      [1]
      Position		      [1515, 70, 1605, 100]
      ZOrder		      146
      Decimation	      "1"
    }
    Block {
      BlockType		      Product
      Name		      "ed*cos"
      SID		      "140"
      Ports		      [2, 1]
      Position		      [1795, 94, 1820, 116]
      ZOrder		      137
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Scope
      Name		      "efd1"
      SID		      "133"
      Ports		      [1]
      Position		      [355, 704, 385, 736]
      ZOrder		      130
      NumInputPorts	      "1"
      Floating		      off
      Open		      on
      TimeRange		      auto
      TickLabels	      OneTimeTick
      ShowLegends	      off
      LimitDataPoints	      off
      MaxDataPoints	      5000
      SaveToWorkspace	      off
      SaveName		      ScopeData2
      YMin		      0.00084
      YMax		      0.00104
      SampleInput	      off
      SampleTime	      -1
      ZoomMode		      on
      Grid		      on
      DataFormat	      StructureWithTime
      Decimation	      1
      List {
	ListType		AxesTitles
	axes1			"%<SignalLabel>"
      }
      List {
	ListType		ScopeGraphics
	FigureColor		"[0.156862745098039 0.156862745098039 0.156862745098039]"
	AxesColor		"[0 0 0]"
	AxesTickColor		"[0.686274509803922 0.686274509803922 0.686274509803922]"
	LineColors		"[1 1 0;1 0 1;0 1 1;1 0 0;0 1 0;0 0 1]"
	LineStyles		"-|-|-|-|-|-"
	LineWidths		"[0.5 0.5 0.5 0.5 0.5 0.5]"
	MarkerStyles		"none|none|none|none|none|none"
      }
      Location		      [103 257 663 677]
    }
    Block {
      BlockType		      Display
      Name		      "eq"
      SID		      "148"
      Ports		      [1]
      Position		      [1500, 225, 1590, 255]
      ZOrder		      145
      Decimation	      "1"
    }
    Block {
      BlockType		      Product
      Name		      "eq*sin"
      SID		      "141"
      Ports		      [2, 1]
      Position		      [1810, 164, 1835, 186]
      ZOrder		      138
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "eq*sin1"
      SID		      "144"
      Ports		      [2, 1]
      Position		      [1665, 214, 1690, 236]
      ZOrder		      141
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "eq*sin2"
      SID		      "154"
      Ports		      [2, 1]
      Position		      [1665, 434, 1690, 456]
      ZOrder		      149
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "eq*sin3"
      SID		      "157"
      Ports		      [2, 1]
      Position		      [1855, 474, 1880, 496]
      ZOrder		      154
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Product
      Name		      "eq*sin4"
      SID		      "158"
      Ports		      [2, 1]
      Position		      [1855, 419, 1880, 441]
      ZOrder		      155
      InputSameDT	      off
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Constant
      Name		      "i0"
      SID		      "126"
      Position		      [-340, 400, -310, 430]
      ZOrder		      122
      Value		      "0"
    }
    Block {
      BlockType		      Constant
      Name		      "i1"
      SID		      "127"
      Position		      [-340, 490, -310, 520]
      ZOrder		      123
      Value		      "ifd"
    }
    Block {
      BlockType		      Constant
      Name		      "id"
      SID		      "130"
      Position		      [-330, 110, -300, 140]
      ZOrder		      126
      Value		      "id"
    }
    Block {
      BlockType		      Constant
      Name		      "iq"
      SID		      "128"
      Position		      [-355, 290, -325, 320]
      ZOrder		      124
      Value		      "iq"
    }
    Block {
      BlockType		      Derivative
      Name		      "pW0"
      SID		      "13"
      Position		      [1360, 360, 1390, 390]
      ZOrder		      12
    }
    Block {
      BlockType		      Derivative
      Name		      "pW1d"
      SID		      "50"
      Position		      [150, 895, 180, 925]
      ZOrder		      48
    }
    Block {
      BlockType		      Derivative
      Name		      "pW1q"
      SID		      "52"
      Position		      [150, 960, 180, 990]
      ZOrder		      50
    }
    Block {
      BlockType		      Derivative
      Name		      "pW2q"
      SID		      "51"
      Position		      [150, 1025, 180, 1055]
      ZOrder		      49
    }
    Block {
      BlockType		      Derivative
      Name		      "pWd"
      SID		      "11"
      Position		      [1355, 65, 1385, 95]
      ZOrder		      10
    }
    Block {
      BlockType		      Derivative
      Name		      "pWfd"
      SID		      "49"
      Position		      [150, 805, 180, 835]
      ZOrder		      47
    }
    Block {
      BlockType		      Derivative
      Name		      "pWq"
      SID		      "12"
      Position		      [1355, 220, 1385, 250]
      ZOrder		      11
    }
    Block {
      BlockType		      Constant
      Name		      "wr"
      SID		      "14"
      Position		      [-340, 180, -310, 210]
      ZOrder		      13
      Value		      "wr"
    }
    Block {
      BlockType		      Outport
      Name		      "efd"
      SID		      "55"
      Position		      [315, 813, 345, 827]
      ZOrder		      53
      IconDisplay	      "Port number"
    }
    Block {
      BlockType		      Outport
      Name		      "i1d"
      SID		      "56"
      Position		      [315, 913, 345, 927]
      ZOrder		      54
      Port		      "2"
      IconDisplay	      "Port number"
    }
    Block {
      BlockType		      Outport
      Name		      "i1q"
      SID		      "57"
      Position		      [315, 978, 345, 992]
      ZOrder		      55
      Port		      "3"
      IconDisplay	      "Port number"
    }
    Block {
      BlockType		      Outport
      Name		      "i2q"
      SID		      "58"
      Position		      [315, 1043, 345, 1057]
      ZOrder		      56
      Port		      "4"
      IconDisplay	      "Port number"
    }
    Block {
      BlockType		      Outport
      Name		      "Wd"
      SID		      "68"
      Position		      [1225, 633, 1255, 647]
      ZOrder		      65
      Port		      "5"
      IconDisplay	      "Port number"
    }
    Block {
      BlockType		      Outport
      Name		      "Wq"
      SID		      "69"
      Position		      [1225, 678, 1255, 692]
      ZOrder		      66
      Port		      "6"
      IconDisplay	      "Port number"
    }
    Block {
      BlockType		      Outport
      Name		      "W0"
      SID		      "70"
      Position		      [1225, 728, 1255, 742]
      ZOrder		      67
      Port		      "7"
      IconDisplay	      "Port number"
    }
    Block {
      BlockType		      Outport
      Name		      "Wfd"
      SID		      "101"
      Position		      [135, 1343, 165, 1357]
      ZOrder		      83
      BlockMirror	      on
      Port		      "8"
      IconDisplay	      "Port number"
    }
    Block {
      BlockType		      Outport
      Name		      "W1d"
      SID		      "102"
      Position		      [135, 1498, 165, 1512]
      ZOrder		      84
      BlockMirror	      on
      Port		      "9"
      IconDisplay	      "Port number"
    }
    Block {
      BlockType		      Outport
      Name		      "W1q"
      SID		      "103"
      Position		      [135, 1573, 165, 1587]
      ZOrder		      85
      BlockMirror	      on
      Port		      "10"
      IconDisplay	      "Port number"
    }
    Block {
      BlockType		      Outport
      Name		      "W2q"
      SID		      "105"
      Position		      [150, 1783, 180, 1797]
      ZOrder		      101
      BlockMirror	      on
      Port		      "11"
      IconDisplay	      "Port number"
    }
    Line {
      SrcBlock		      "Sum4"
      SrcPort		      1
      Points		      [8, 0]
      Branch {
	DstBlock		"Wd"
	DstPort			1
      }
      Branch {
	Points			[0, -560; 155, 0]
	Branch {
	  Points		  [0, 100]
	  DstBlock		  "Wd*wr"
	  DstPort		  1
	}
	Branch {
	  DstBlock		  "pWd"
	  DstPort		  1
	}
      }
    }
    Line {
      SrcBlock		      "Sum5"
      SrcPort		      1
      Points		      [33, 0; 0, -205]
      Branch {
	Points			[0, -450; 136, 0]
	Branch {
	  Points		  [0, 95]
	  DstBlock		  "Wq*Wr"
	  DstPort		  1
	}
	Branch {
	  DstBlock		  "pWq"
	  DstPort		  1
	}
      }
      Branch {
	DstBlock		"Wq"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Gain3"
      SrcPort		      1
      Points		      [39, 0]
      Branch {
	Points			[0, -350]
	DstBlock		"W0"
	DstPort			1
      }
      Branch {
	Points			[94, 0; 0, -710]
	DstBlock		"pW0"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "wr"
      SrcPort		      1
      Points		      [1528, 0]
      Branch {
	Points			[0, -5]
	DstBlock		"Wd*wr"
	DstPort			2
      }
      Branch {
	Points			[0, 145]
	DstBlock		"Wq*Wr"
	DstPort			2
      }
    }
    Line {
      SrcBlock		      "Sum"
      SrcPort		      1
      Points		      [41, 0]
      Branch {
	DstBlock		"ed"
	DstPort			1
      }
      Branch {
	Points			[0, -30; 193, 0]
	Branch {
	  Points		  [0, 149; 144, 0; 0, 221]
	  DstBlock		  "eq*sin4"
	  DstPort		  1
	}
	Branch {
	  Points		  [80, 0; 0, 45]
	  DstBlock		  "ed*cos"
	  DstPort		  1
	}
      }
    }
    Line {
      SrcBlock		      "pWd"
      SrcPort		      1
      Points		      [13, 0; 0, -7]
      DstBlock		      "Sum"
      DstPort		      1
    }
    Line {
      SrcBlock		      "pWq"
      SrcPort		      1
      Points		      [19, 0; 0, -7]
      DstBlock		      "Sum1"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Sum1"
      SrcPort		      1
      Points		      [0, 0]
      Branch {
	Points			[5, 0]
	Branch {
	  Points		  [0, 103; 61, 0; 0, 194; 286, 0; 0, -47]
	  DstBlock		  "eq*sin3"
	  DstPort		  2
	}
	Branch {
	  DstBlock		  "eq"
	  DstPort		  1
	}
      }
      Branch {
	Points			[0, -70]
	DstBlock		"eq*sin"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Wd*wr"
      SrcPort		      1
      Points		      [25, 0; 0, 67]
      DstBlock		      "Sum1"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Constant"
      SrcPort		      1
      Points		      [25, 0]
      Branch {
	Points			[0, -25]
	DstBlock		"Ra*id"
	DstPort			2
      }
      Branch {
	Points			[0, 135]
	Branch {
	  Points		  [0, 130]
	  DstBlock		  "Ra*i0"
	  DstPort		  1
	}
	Branch {
	  DstBlock		  "Ra*iq\n"
	  DstPort		  2
	}
      }
    }
    Line {
      SrcBlock		      "iq"
      SrcPort		      1
      Points		      [512, 0]
      Branch {
	Points			[278, 0; 0, -20; 166, 0]
	Branch {
	  DstBlock		  "Ra*iq\n"
	  DstPort		  1
	}
	Branch {
	  Points		  [0, 1420]
	  DstBlock		  "Laq*iq"
	  DstPort		  2
	}
      }
      Branch {
	Points			[0, 566; 838, 0]
	DstBlock		"L*iq"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Ra*id"
      SrcPort		      1
      Points		      [26, 0; 0, -33]
      DstBlock		      "Sum"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Ra*iq\n"
      SrcPort		      1
      Points		      [80, 0]
      DstBlock		      "Sum1"
      DstPort		      3
    }
    Line {
      SrcBlock		      "i0"
      SrcPort		      1
      Points		      [1015, 0; 0, 20]
      Branch {
	Points			[0, 645]
	DstBlock		"L*i0"
	DstPort			1
      }
      Branch {
	DstBlock		"Ra*i0"
	DstPort			2
      }
    }
    Line {
      SrcBlock		      "Sum2"
      SrcPort		      1
      Points		      [11, 0]
      Branch {
	Points			[0, -10; 399, 0; 0, -17]
	Branch {
	  Points		  [65, 0]
	  DstBlock		  "Sum13"
	  DstPort		  3
	}
	Branch {
	  DstBlock		  "Sum10"
	  DstPort		  3
	}
      }
      Branch {
	Points			[0, 60]
	DstBlock		"e0"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "pW0"
      SrcPort		      1
      Points		      [18, 0; 0, 15]
      DstBlock		      "Sum2"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Ra*i0"
      SrcPort		      1
      Points		      [55, 0]
      DstBlock		      "Sum2"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Constant16"
      SrcPort		      1
      Points		      [108, 0; 0, -100]
      DstBlock		      "Divide3"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Constant3"
      SrcPort		      1
      Points		      [7, 0; 0, 9; 100, 0; 0, -24]
      DstBlock		      "Divide2"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Constant2"
      SrcPort		      1
      Points		      [20, 0; 0, 9; 117, 0; 0, -24]
      DstBlock		      "Divide1"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Constant1"
      SrcPort		      1
      Points		      [38, 0; 0, -70]
      DstBlock		      "Rfd*ifd"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Sum6"
      SrcPort		      1
      Points		      [-91, 0]
      Branch {
	Points			[0, -20; -88, 0]
	Branch {
	  Points		  [0, -80]
	  DstBlock		  "Scope"
	  DstPort		  1
	}
	Branch {
	  Points		  [-150, 0; 0, -510]
	  DstBlock		  "pWfd"
	  DstPort		  1
	}
      }
      Branch {
	DstBlock		"Wfd"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Sum9"
      SrcPort		      1
      Points		      [-51, 0; 0, -30]
      Branch {
	Points			[0, -28; -321, 0; 0, -722]
	DstBlock		"pW2q"
	DstPort			1
      }
      Branch {
	DstBlock		"W2q"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Sum8"
      SrcPort		      1
      Points		      [-44, 0; 0, -15; -23, 0]
      Branch {
	Points			[0, -30; -258, 0; 0, -575]
	DstBlock		"pW1q"
	DstPort			1
      }
      Branch {
	DstBlock		"W1q"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Sum7"
      SrcPort		      1
      Points		      [-78, 0]
      Branch {
	Points			[0, -24; -213, 0; 0, -571]
	DstBlock		"pW1d"
	DstPort			1
      }
      Branch {
	DstBlock		"W1d"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "pWfd"
      SrcPort		      1
      DstBlock		      "Sum3"
      DstPort		      2
    }
    Line {
      SrcBlock		      "i1"
      SrcPort		      1
      Points		      [311, 0]
      Branch {
	Points			[0, 195]
	DstBlock		"Rfd*ifd"
	DstPort			1
      }
      Branch {
	Points			[294, 0; 0, 155; 128, 0]
	Branch {
	  DstBlock		  "Lad*ifd"
	  DstPort		  1
	}
	Branch {
	  Points		  [0, 635; -6, 0]
	  Branch {
	    Points		    [0, 155]
	    DstBlock		    "Lf1d*ifd"
	    DstPort		    1
	  }
	  Branch {
	    DstBlock		    "Lffd*ifd"
	    DstPort		    1
	  }
	}
      }
    }
    Line {
      SrcBlock		      "pW1d"
      SrcPort		      1
      DstBlock		      "Gain"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Divide1"
      SrcPort		      1
      Points		      [5, 0]
      Branch {
	Points			[8, 0; 0, -43; 71, 0; 0, -13]
	Branch {
	  Points		  [63, 0; 0, 481; -9, 0]
	  Branch {
	    Points		    [0, 155]
	    DstBlock		    "L11d*i1d"
	    DstPort		    1
	  }
	  Branch {
	    DstBlock		    "Lf1d*i1d"
	    DstPort		    1
	  }
	}
	Branch {
	  Points		  [0, -104]
	  DstBlock		  "Lad*i1d"
	  DstPort		  2
	}
      }
      Branch {
	DstBlock		"i1d"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Gain"
      SrcPort		      1
      DstBlock		      "Divide1"
      DstPort		      1
    }
    Line {
      SrcBlock		      "pW1q"
      SrcPort		      1
      DstBlock		      "Gain1"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Gain1"
      SrcPort		      1
      DstBlock		      "Divide2"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Divide2"
      SrcPort		      1
      Points		      [5, 0]
      Branch {
	Points			[0, -21; 311, 0]
	Branch {
	  Points		  [0, 587]
	  Branch {
	    Points		    [0, 234]
	    DstBlock		    "Laq*i1q"
	    DstPort		    1
	  }
	  Branch {
	    Points		    [-189, 0; 0, 14]
	    DstBlock		    "L11q*i1q"
	    DstPort		    1
	  }
	}
	Branch {
	  Points		  [416, 0; 0, -54]
	  DstBlock		  "Laq1*i1q"
	  DstPort		  1
	}
      }
      Branch {
	DstBlock		"i1q"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "pW2q"
      SrcPort		      1
      DstBlock		      "Gain2"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Gain2"
      SrcPort		      1
      DstBlock		      "Divide3"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Divide3"
      SrcPort		      1
      Points		      [5, 0]
      Branch {
	Points			[0, -40; 361, 0]
	Branch {
	  DstBlock		  "Laq1*i2q"
	  DstPort		  2
	}
	Branch {
	  Points		  [0, 610]
	  Branch {
	    Points		    [0, 240]
	    DstBlock		    "L22q*i2q1"
	    DstPort		    1
	  }
	  Branch {
	    Points		    [-208, 0; 0, 20]
	    DstBlock		    "Laq*i2q"
	    DstPort		    1
	  }
	}
      }
      Branch {
	DstBlock		"i2q"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Wq*Wr"
      SrcPort		      1
      Points		      [40, 0]
      DstBlock		      "Sum"
      DstPort		      3
    }
    Line {
      SrcBlock		      "Constant5"
      SrcPort		      1
      Points		      [33, 0; 0, -15]
      DstBlock		      "L*id"
      DstPort		      2
    }
    Line {
      SrcBlock		      "L*id"
      SrcPort		      1
      Points		      [70, 0]
      DstBlock		      "Sum4"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Constant6"
      SrcPort		      1
      Points		      [27, 0]
      Branch {
	Points			[0, 65]
	DstBlock		"Lad*i1d"
	DstPort			1
      }
      Branch {
	Points			[9, 0; 0, -15]
	DstBlock		"Lad*ifd"
	DstPort			2
      }
    }
    Line {
      SrcBlock		      "Lad*i1d"
      SrcPort		      1
      Points		      [70, 0]
      DstBlock		      "Sum4"
      DstPort		      3
    }
    Line {
      SrcBlock		      "Lad*ifd"
      SrcPort		      1
      Points		      [28, 0; 0, -25]
      DstBlock		      "Sum4"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Laq1*i1q"
      SrcPort		      1
      Points		      [28, 0; 0, -25]
      DstBlock		      "Sum5"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Laq1*i2q"
      SrcPort		      1
      Points		      [70, 0]
      DstBlock		      "Sum5"
      DstPort		      3
    }
    Line {
      SrcBlock		      "Constant8"
      SrcPort		      1
      Points		      [27, 0]
      Branch {
	Points			[9, 0; 0, -15]
	DstBlock		"Laq1*i1q"
	DstPort			2
      }
      Branch {
	Points			[0, 65]
	DstBlock		"Laq1*i2q"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "L*iq"
      SrcPort		      1
      Points		      [70, 0]
      DstBlock		      "Sum5"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Constant7"
      SrcPort		      1
      Points		      [33, 0; 0, -15]
      DstBlock		      "L*iq"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Constant9"
      SrcPort		      1
      Points		      [38, 0; 0, -35]
      DstBlock		      "L*i0"
      DstPort		      2
    }
    Line {
      SrcBlock		      "L*i0"
      SrcPort		      1
      DstBlock		      "Gain3"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Lf1d*i1d"
      SrcPort		      1
      DstBlock		      "Sum6"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Lad*id"
      SrcPort		      1
      Points		      [-40, 0]
      Branch {
	Points			[0, 130]
	DstBlock		"Sum7"
	DstPort			3
      }
      Branch {
	DstBlock		"Sum6"
	DstPort			3
      }
    }
    Line {
      SrcBlock		      "Lffd*ifd"
      SrcPort		      1
      Points		      [-40, 0]
      DstBlock		      "Sum6"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Constant11"
      SrcPort		      1
      Points		      [-41, 0; 0, -15]
      DstBlock		      "Lad*id"
      DstPort		      2
    }
    Line {
      SrcBlock		      "id"
      SrcPort		      1
      Points		      [663, 0]
      Branch {
	Points			[0, 440; 210, 0]
	Branch {
	  DstBlock		  "L*id"
	  DstPort		  1
	}
	Branch {
	  Points		  [0, 830]
	  DstBlock		  "Lad*id"
	  DstPort		  1
	}
      }
      Branch {
	DstBlock		"Ra*id"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Constant15"
      SrcPort		      1
      Points		      [-39, 0]
      Branch {
	Points			[0, 105]
	DstBlock		"Lf1d*ifd"
	DstPort			2
      }
      Branch {
	DstBlock		"Lf1d*i1d"
	DstPort			2
      }
    }
    Line {
      SrcBlock		      "Constant14"
      SrcPort		      1
      DstBlock		      "L11d*i1d"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Constant13"
      SrcPort		      1
      DstBlock		      "L11q*i1q"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Constant10"
      SrcPort		      1
      DstBlock		      "Lffd*ifd"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Lf1d*ifd"
      SrcPort		      1
      Points		      [-100, 0]
      DstBlock		      "Sum7"
      DstPort		      1
    }
    Line {
      SrcBlock		      "L11d*i1d"
      SrcPort		      1
      DstBlock		      "Sum7"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Constant12"
      SrcPort		      1
      Points		      [-40, 0]
      Branch {
	Points			[0, 45; -2, 0]
	Branch {
	  Points		  [0, 100]
	  DstBlock		  "Laq*i1q"
	  DstPort		  2
	}
	Branch {
	  DstBlock		  "Laq*iq"
	  DstPort		  1
	}
      }
      Branch {
	DstBlock		"Laq*i2q"
	DstPort			2
      }
    }
    Line {
      SrcBlock		      "L11q*i1q"
      SrcPort		      1
      DstBlock		      "Sum8"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Laq*i2q"
      SrcPort		      1
      Points		      [-40, 0; 0, -50]
      DstBlock		      "Sum8"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Laq*iq"
      SrcPort		      1
      Points		      [-19, 0]
      Branch {
	Points			[-76, 0]
	DstBlock		"Sum8"
	DstPort			3
      }
      Branch {
	Points			[0, 162; -76, 0]
	DstBlock		"Sum9"
	DstPort			3
      }
    }
    Line {
      SrcBlock		      "Laq*i1q"
      SrcPort		      1
      Points		      [-95, 0]
      DstBlock		      "Sum9"
      DstPort		      1
    }
    Line {
      SrcBlock		      "L22q*i2q1"
      SrcPort		      1
      Points		      [-7, 0; 0, -45]
      DstBlock		      "Sum9"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Constant4"
      SrcPort		      1
      Points		      [-62, 0; 0, -30]
      DstBlock		      "L22q*i2q1"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Rfd*ifd"
      SrcPort		      1
      Points		      [45, 0]
      DstBlock		      "Sum3"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Sum3"
      SrcPort		      1
      Points		      [34, 0]
      Branch {
	Points			[0, -100]
	DstBlock		"efd1"
	DstPort			1
      }
      Branch {
	DstBlock		"efd"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Trigonometric\nFunction"
      SrcPort		      1
      Points		      [9, 0; 0, -25]
      DstBlock		      "ed*cos"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Trigonometric\nFunction1"
      SrcPort		      1
      Points		      [5, 0; 0, -45]
      DstBlock		      "eq*sin"
      DstPort		      2
    }
    Line {
      SrcBlock		      "eq*sin"
      SrcPort		      1
      Points		      [11, 0; 0, -28]
      DstBlock		      "Sum10"
      DstPort		      2
    }
    Line {
      SrcBlock		      "ed*cos"
      SrcPort		      1
      Points		      [8, 0; 0, 18]
      DstBlock		      "Sum10"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Sum10"
      SrcPort		      1
      Points		      [33, 0]
      Branch {
	DstBlock		"ea"
	DstPort			1
      }
      Branch {
	Points			[0, 40]
	DstBlock		"Mux"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Constant17"
      SrcPort		      1
      Points		      [5, 0]
      DstBlock		      "eq*sin1"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Clock"
      SrcPort		      1
      Points		      [9, 0; 0, -10]
      DstBlock		      "eq*sin1"
      DstPort		      2
    }
    Line {
      SrcBlock		      "eq*sin1"
      SrcPort		      1
      DstBlock		      "Sum11"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Sum11"
      SrcPort		      1
      Points		      [16, 0]
      Branch {
	Points			[0, -32; -22, 0; 0, -58]
	DstBlock		"Trigonometric\nFunction"
	DstPort			1
      }
      Branch {
	DstBlock		"Trigonometric\nFunction1"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Constant18"
      SrcPort		      1
      Points		      [25, 0]
      DstBlock		      "Sum11"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Constant20"
      SrcPort		      1
      Points		      [35, 0]
      DstBlock		      "Sum12"
      DstPort		      2
    }
    Line {
      SrcBlock		      "eq*sin2"
      SrcPort		      1
      DstBlock		      "Sum12"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Clock1"
      SrcPort		      1
      Points		      [9, 0; 0, -10]
      DstBlock		      "eq*sin2"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Constant19"
      SrcPort		      1
      Points		      [5, 0]
      DstBlock		      "eq*sin2"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Sum12"
      SrcPort		      1
      Points		      [5, 0]
      Branch {
	Points			[0, 45]
	DstBlock		"Trigonometric\nFunction3"
	DstPort			1
      }
      Branch {
	DstBlock		"Trigonometric\nFunction2"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Trigonometric\nFunction2"
      SrcPort		      1
      Points		      [22, 0; 0, -10]
      DstBlock		      "eq*sin4"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Trigonometric\nFunction3"
      SrcPort		      1
      Points		      [11, 0; 0, -10]
      DstBlock		      "eq*sin3"
      DstPort		      1
    }
    Line {
      SrcBlock		      "eq*sin4"
      SrcPort		      1
      Points		      [15, 0; 0, -160]
      DstBlock		      "Sum13"
      DstPort		      1
    }
    Line {
      SrcBlock		      "eq*sin3"
      SrcPort		      1
      Points		      [6, 0; 0, -194]
      DstBlock		      "Sum13"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Sum13"
      SrcPort		      1
      Points		      [9, 0; 0, -40; -54, 0; 0, -35]
      DstBlock		      "Mux"
      DstPort		      2
    }
    Annotation {
      SID		      "67"
      Name		      "Flujo de Enlace del estator"
      Position		      [995, 506]
      ZOrder		      -1
    }
    Annotation {
      SID		      "29"
      Name		      "Ecuaciones del Rotor"
      Position		      [161, 645]
      ZOrder		      -2
    }
    Annotation {
      SID		      "1"
      Name		      "Ecuaciones del estator"
      Position		      [706, 20]
      ZOrder		      -3
    }
    Annotation {
      SID		      "104"
      Name		      "Flujo de Enlace del rotor"
      Position		      [244, 1256]
      ZOrder		      -1
    }
  }
}
